--Tic Tac Toe where you can replace player Aâ€™s pieces to test that comparing board content works properly
--it does not, it tries to compare content to player, like b!p == A does not become b!p == ContentCon A

type Board = Array(3,3) of Player & { Empty }
type Input = Position

threeInARow : Board -> Bool
threeInARow(b) = or(inARow(3,A,b),inARow(3,B,b))

loop : (Board,Player) -> (Board,Player)
loop(b,p) = while not(gameOver(b,p)) do try(b,p)

try : (Board, Player) -> (Board,Player)
try(b,p) = let pos = input in
                   if valid(b,pos) then (place(p,b,pos),next(p))
                                     else (b,p)

valid : (Board, Position) -> Bool
valid (b,p) = if or(b!p == Empty, b!p == A) then True else False

-- Game over function !
gameOver : (Board ,Player) -> Bool 
gameOver(b,p) = or(threeInARow(b),isFull(b))

outcome : (Board,Player) -> Player & {Tie}
outcome(b,p) = if inARow(3,A,b) then B else
               if inARow(3,B,b) then A else
               Tie

play : (Board,Player) -> Player & { Tie }
play(a,b) = outcome(loop(a,b))

result : Player & { Tie }
result = play(initialBoard,goFirst)

